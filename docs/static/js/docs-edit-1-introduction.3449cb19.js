(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"./docs-edit/1-introduction.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),o=a.n(t),r=a("./node_modules/@mdx-js/tag/dist/index.js");function m(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}n.default=function(e){var n=e.components;m(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"introduction"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h1",props:{"aria-hidden":!0,href:"#introduction"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Introduction"),o.a.createElement(r.MDXTag,{name:"p",components:n},"RxPouch is not just ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/ReactiveX/rxjs"}},"RxJs")," powered ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/pouchdb/pouchdb"}},"PouchDB"),",\nit's simplified and modified for common needs I encountered."),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"installation"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#installation"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"Installation"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre"},"npm install rx-pouch --save\n\n# peerDependencies\nnpm install rxjs babel-polyfill --save\n")),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"difference-to-rxdb"}},o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"h2",props:{"aria-hidden":!0,href:"#difference-to-rxdb"}},o.a.createElement(r.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon-link"}},"#")),"difference to RxDB"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Well a lot of credits goes to ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/pubkey/rxdb"}},"RxDB"),", since we borrowed a lot from them.\nIn RxDB every collection creates a new database, which is in ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"most")," use-cases is perfectly fine.\n",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"For my use-case it wasn't.")),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"RxDB uses multiply databases, RxPouch uses document keys with the prefix ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"<collection>-")," and adds to each\ndocument a property ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"type: '<collection>'")),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"RxDB has thei own API"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"RxPouch tried to follow the official PouchDB API as close as possible, but also added some sugar."),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"RxPouch got less features (Leader Election, Schema, Population etc..)"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},"RxPouch has a different filter / sorting system")))}}}]);